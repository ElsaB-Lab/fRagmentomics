% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_size_distribution.R
\name{plot_size_distribution}
\alias{plot_size_distribution}
\title{Plot Fragment Size Distribution}
\usage{
plot_size_distribution(
  df_fragments,
  size_col = "Fragment_Size",
  col_z = "Fragment_Status_Simple",
  vals_z = NULL,
  histo_args = list(),
  density_args = list(),
  colors_z = NULL,
  show_histogram = FALSE,
  show_density = TRUE,
  x_limits = c(0, 750),
  histogram_binwidth = 5,
  show_nuc_peaks = TRUE
)
}
\arguments{
\item{df_fragments}{The input dataframe containing the fragment data.}

\item{size_col}{A character string specifying the name of the numeric column that contains the fragment lengths.}

\item{col_z}{A character string specifying the name of the column to use for grouping the data. If NULL, no grouping is applied.}

\item{vals_z}{An optional character vector to filter and display only specific groups from 'col_z'. If NULL, all groups are used.}

\item{histo_args}{A named list of additional arguments to pass to 'ggplot2::geom_histogram()'.}

\item{density_args}{A named list of additional arguments to pass to 'ggplot2::geom_density()'.}

\item{colors_z}{A character vector of colors for the groups, or a single string naming an RColorBrewer palette.}

\item{show_histogram}{A logical value. If TRUE, a histogram layer is added.}

\item{show_density}{A logical value. If TRUE, a density plot layer is added.}

\item{x_limits}{An optional numeric vector of length 2 to set the x-axis limits (e.g., c(0, 700)).}

\item{histogram_binwidth}{A numeric value specifying the bin width for the histogram.}

\item{show_nuc_peaks}{A logical value. If TRUE, adds vertical lines for nucleosome peaks.}
}
\value{
A 'ggplot' object representing the size distribution plot.
}
\description{
Generates a plot visualizing the distribution of fragment lengths. It allows for grouping by a
categorical variable and can represent the distribution as a histogram, a density plot, or an overlay of both.
It also displays the sample size (N) for each group in the legend.
}
\examples{
## --- Create a dataset for demonstration ---
# Set a seed for reproducibility
set.seed(42)

# Generate fragment sizes for two groups with different distributions
# "MUT" group: N=100, shorter fragments
mut_sizes <- rnorm(100, mean = 150, sd = 20)

# "WT" group: N=150, centered around the mononucleosome peak
wt_sizes <- rnorm(150, mean = 170, sd = 25)

# Add some larger, dinucleosomal fragments to both groups
di_nuc_sizes <- rnorm(30, mean = 330, sd = 30)

# Combine into a single dataframe
example_df_size <- data.frame(
    Fragment_Size = c(mut_sizes, wt_sizes, di_nuc_sizes),
    Fragment_Status_Simple = c(
        rep("MUT", 100),
        rep("WT", 150),
        sample(c("MUT", "WT"), 30, replace = TRUE)
    )
)
# Ensure all fragment sizes are positive
example_df_size <- example_df_size[example_df_size$Fragment_Size > 0, ]

## --- Function Calls ---

# 1. Default plot: A grouped density plot with nucleosome peaks shown.
p1 <- plot_size_distribution(example_df_size)
print(p1)

# 2. Histogram plot: Show distributions as histograms instead of density curves.
#    We add transparency (alpha) so overlapping bars are visible.
p2 <- plot_size_distribution(
    df_fragments = example_df_size,
    show_histogram = TRUE,
    show_density = FALSE,
    histo_args = list(alpha = 0.6)
)
print(p2)

# 3. Combined plot: Overlay both density curves and histograms.
p3 <- plot_size_distribution(
    df_fragments = example_df_size,
    show_histogram = TRUE,
    show_density = TRUE,
    histo_args = list(alpha = 0.4)
)
print(p3)

# 4. Ungrouped and customized plot: Analyze all fragments together,
#    zoom in on the x-axis, and hide the nucleosome peak lines.
p4 <- plot_size_distribution(
    df_fragments = example_df_size,
    col_z = NULL,
    x_limits = c(50, 400),
    show_nuc_peaks = FALSE
)
print(p4)
}
