% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_size_distribution.R
\name{plot_size_distribution}
\alias{plot_size_distribution}
\title{Plot Fragment Size Distribution}
\usage{
plot_size_distribution(
  df_fragments,
  size_col = "Fragment_Size",
  col_z = "Fragment_Status_Simple",
  vals_z = NULL,
  histo_args = list(),
  density_args = list(),
  colors_z = NULL,
  show_histogram = FALSE,
  show_density = TRUE,
  x_limits = c(0, 750),
  histogram_binwidth = 5,
  show_nuc_peaks = TRUE,
  title = NULL,
  output_path = NA_character_,
  ggsave_params = list(width = 8, height = 6, units = "in", dpi = 300, bg = "white")
)
}
\arguments{
\item{df_fragments}{The input dataframe containing the fragment data.}

\item{size_col}{A character string specifying the name of the numeric column that contains the fragment lengths.}

\item{col_z}{A character string specifying the name of the column to use for grouping the data. If NULL, no grouping is applied.}

\item{vals_z}{An optional character vector to filter and display only specific groups from \code{col_z}. If NULL, all groups are used.}

\item{histo_args}{A named list of additional arguments passed to \code{\link[ggplot2:geom_histogram]{ggplot2::geom_histogram()}}.}

\item{density_args}{A named list of additional arguments passed to \code{\link[ggplot2:geom_density]{ggplot2::geom_density()}}.}

\item{colors_z}{A character vector of colors for the groups (named or unnamed), or a single string naming an RColorBrewer palette.}

\item{show_histogram}{Logical. If TRUE, a histogram layer is added.}

\item{show_density}{Logical. If TRUE, a density plot layer is added.}

\item{x_limits}{Optional numeric vector of length 2 to set the x-axis limits (e.g., \code{c(0, 700)}).}

\item{histogram_binwidth}{Numeric value specifying the bin width for the histogram.}

\item{show_nuc_peaks}{Logical. If TRUE, adds dashed vertical lines for nucleosome peaks (mono/di/tri).}

\item{title}{Character or NA. Plot title; if NULL/NA/"NA"/empty, a default title is used.}

\item{output_path}{Character or NA. If provided and non-empty, the plot is saved to this file.}

\item{ggsave_params}{A named list of arguments passed to \code{\link[ggplot2:ggsave]{ggplot2::ggsave()}}. Defaults:
\code{list(width = 8, height = 6, units = "in", dpi = 300, bg = "white")}.}
}
\value{
A \code{ggplot} object representing the size distribution plot (invisibly \code{NULL} if saved).
}
\description{
Generates a plot visualizing the distribution of fragment lengths. Supports grouping by a
categorical variable and can represent the distribution as a histogram, a density plot,
or an overlay of both. The legend displays the sample size (N) per group. Groups with
fewer than 2 observations are automatically removed when \code{show_density = TRUE}.
}
\examples{
## --- Create a dataset for demonstration ---
set.seed(42)

# Generate fragment sizes for two groups with different distributions
# "MUT" group: N=100, shorter fragments
mut_sizes <- rnorm(100, mean = 150, sd = 20)

# "WT" group: N=150, centered around the mononucleosome peak
wt_sizes <- rnorm(150, mean = 170, sd = 25)

# Add some larger, dinucleosomal fragments to both groups
di_nuc_sizes <- rnorm(30, mean = 330, sd = 30)

# Combine into a single dataframe
example_df_size <- data.frame(
  Fragment_Size = c(mut_sizes, wt_sizes, di_nuc_sizes),
  Fragment_Status_Simple = c(
    rep("MUT", 100),
    rep("WT", 150),
    sample(c("MUT", "WT"), 30, replace = TRUE)
  )
)
# Ensure all fragment sizes are positive
example_df_size <- example_df_size[example_df_size$Fragment_Size > 0, ]

## --- Plotting Examples ---

# 1) Default plot: grouped density with nucleosome peaks.
p1 <- plot_size_distribution(example_df_size)
print(p1)

# 2) Histogram only: add transparency so overlapping bars are visible.
p2 <- plot_size_distribution(
  df_fragments   = example_df_size,
  show_histogram = TRUE,
  show_density   = FALSE,
  histo_args     = list(alpha = 0.6)
)
print(p2)

# 3) Combined: overlay density curves and histograms.
p3 <- plot_size_distribution(
  df_fragments   = example_df_size,
  show_histogram = TRUE,
  show_density   = TRUE,
  histo_args     = list(alpha = 0.4)
)
print(p3)

# 4) Ungrouped + zoomed x-axis + no nucleosome peaks.
p4 <- plot_size_distribution(
  df_fragments   = example_df_size,
  col_z          = NULL,
  x_limits       = c(50, 400),
  show_nuc_peaks = FALSE,
  title          = "All fragments (zoomed)"
)
print(p4)

# 5) Custom colors using an RColorBrewer palette.
p5 <- plot_size_distribution(
  df_fragments = example_df_size,
  colors_z     = "Set2",
  title        = "Fragment size (Set2 palette)"
)
print(p5)

# 6) Save to file (commented for CRAN):
# out_png <- file.path(tempdir(), "size_distribution.png")
# plot_size_distribution(
#   df_fragments  = example_df_size,
#   output_path   = out_png,
#   ggsave_params = list(width = 8, height = 6, units = "in", dpi = 300, bg = "white"),
#   title         = "Size distribution (saved)"
# )
}
