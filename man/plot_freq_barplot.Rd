% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_freq_barplot.R
\name{plot_freq_barplot}
\alias{plot_freq_barplot}
\title{Plot Overall Nucleotide Frequency}
\usage{
plot_freq_barplot(
  df_fragments,
  end_motif_5p = "Fragment_Bases_5p",
  end_motif_3p = "Fragment_Bases_3p",
  motif_type = "Both",
  motif_size = 3,
  col_z = "Fragment_Status_Simple",
  vals_z = NULL,
  ...,
  colors_z = "Set2",
  sample_id = NA,
  output_path = NA,
  ggsave_params = list()
)
}
\arguments{
\item{df_fragments}{The input dataframe containing fragment sequence data.}

\item{end_motif_5p}{Character string. Column name for 5' end sequences.}

\item{end_motif_3p}{Character string. Column name for 3' end sequences.}

\item{motif_type}{Character string. Which ends to analyze: 'Start', 'End', or 'Both'.}

\item{motif_size}{A single integer specifying the length of the motif to analyze.}

\item{col_z}{Character string. Column name for grouping. If NULL, no grouping is applied.}

\item{vals_z}{A character vector of group names from 'col_z' to include.
If NULL, all unique groups in 'col_z' are used.}

\item{...}{Additional arguments passed on to 'ggplot2::geom_bar()'.}

\item{colors_z}{A character vector of colors for the groups, or a single string
naming an RColorBrewer palette (e.g., "Set2").}

\item{sample_id}{Sample identifier.}

\item{output_path}{Character vector for the plot output path.}

\item{ggsave_params}{A named list of arguments to be passed to 'ggplot2::ggsave()'. For example,
'list(width = 8, height = 6, units = "in", dpi = 300, bg = "white")'. If not provided, sensible defaults will be used.}
}
\value{
A 'ggplot' object.
}
\description{
Creates a faceted bar plot to compare the overall proportion of each nucleotide across different groups. Includes
error bars (95\% confidence intervals) and an optional global Chi-squared test for statistical significance.
}
\examples{
## --- Create a dataset for demonstration ---
# Set a seed for reproducibility
set.seed(42)

# Helper function to generate random DNA sequences with a bias
generate_biased_dna <- function(n_seq, len, prob) {
    bases <- c("A", "C", "G", "T")
    replicate(n_seq, paste(sample(bases, len, replace = TRUE, prob = prob), collapse = ""))
}

# Create 50 "MUT" fragments with a high proportion of 'C'
df_mut <- data.frame(
    Fragment_Bases_5p = generate_biased_dna(50, 10, prob = c(0.2, 0.5, 0.15, 0.15)),
    Fragment_Bases_3p = generate_biased_dna(50, 10, prob = c(0.2, 0.5, 0.15, 0.15)),
    Fragment_Status_Simple = "MUT"
)

# Create 50 "WT" fragments with a high proportion of 'G'
df_wt <- data.frame(
    Fragment_Bases_5p = generate_biased_dna(50, 10, prob = c(0.15, 0.15, 0.5, 0.2)),
    Fragment_Bases_3p = generate_biased_dna(50, 10, prob = c(0.15, 0.15, 0.5, 0.2)),
    Fragment_Status_Simple = "WT"
)

# Combine into a single dataframe
example_df <- rbind(df_mut, df_wt)

## --- Function Calls ---

# 1. Default plot: Compares MUT vs. WT groups for 3-mers
#    from both the 5' and 3' ends.
p1 <- plot_freq_barplot(example_df)
print(p1)

# 2. Customized plot: Analyzes only the first nucleotide ('motif_size = 1')
#    of the 5' end ('motif_type = "Start"') using custom colors.
p2 <- plot_freq_barplot(
    df_fragments = example_df,
    motif_type = "Start",
    motif_size = 1,
    colors_z = c("MUT" = "#d95f02", "WT" = "#1b9e77")
)
print(p2)

# 3. Ungrouped plot: Analyzes the overall nucleotide frequency
#    across all fragments combined.
p3 <- plot_freq_barplot(example_df, col_z = NULL)
print(p3)

# 4. Plot with a subset of groups: If you had more than two groups
#    (e.g., "MUT", "WT", "AMB"), you could select specific ones to plot.
p4 <- plot_freq_barplot(
    df_fragments = example_df,
    vals_z = c("MUT", "WT")
)
print(p4)

# 5. Save the default plot to a temporary folder.
# plot_freq_barplot(
#   df_fragments = example_df,
#   sample_id = "test01_freq",
#   output_path = "test01_freq_nucleotide_frequency.png"
# )

# 6. Save a customized plot with specific dimensions.
# plot_freq_barplot(
#   df_fragments = example_df,
#   motif_type = "Start",
#   motif_size = 1,
#   sample_id = "test02_freq_custom",
#   output_path = "test02_freq_custom_nucleotide_frequency.png"
#   ggsave_params = list(width = 7, height = 5, units = "in")
# )

}
