% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_freq_barplot.R
\name{plot_freq_barplot}
\alias{plot_freq_barplot}
\title{Plot Overall Nucleotide Frequency}
\usage{
plot_freq_barplot(
  df_fragments,
  end_motif_5p = "Fragment_Bases_5p",
  end_motif_3p = "Fragment_Bases_3p",
  motif_type = "Both",
  motif_size = 3,
  col_z = "Fragment_Status_Simple",
  vals_z = NULL,
  ...,
  colors_z = "Dark2",
  title = NULL,
  output_path = NA_character_,
  ggsave_params = list(width = 14, height = 5, units = "in", dpi = 300, bg = "white"),
  show_pvalue = FALSE,
  drop_non_acgt = TRUE
)
}
\arguments{
\item{df_fragments}{The input data frame containing fragment sequence data.}

\item{end_motif_5p}{Character string. Column name for 5' end sequences.}

\item{end_motif_3p}{Character string. Column name for 3' end sequences.}

\item{motif_type}{Character string. Which ends to analyze: 'Start', 'End', or 'Both'.}

\item{motif_size}{A single integer (>= 1) specifying the k-mer length to analyze.}

\item{col_z}{Character string or 'NULL'. Column name for grouping. If 'NULL', all fragments are pooled.}

\item{vals_z}{A character vector of group names from 'col_z' to include.
If 'NULL', all unique groups in 'col_z' are used.}

\item{...}{Additional aesthetics/arguments passed to \code{\link[ggplot2:geom_bar]{ggplot2::geom_col()}} and \code{\link[ggplot2:geom_linerange]{ggplot2::geom_errorbar()}}.
(e.g., 'alpha', 'position', or 'width').}

\item{colors_z}{A character vector of colors for the groups, or a single
RColorBrewer palette name (e.g., '"Set2"'). Named vectors are aligned to 'vals_z'.}

\item{title}{Character or 'NA'. Plot title. If 'NULL', 'NA', '"NA"', or empty, a default title is used.}

\item{output_path}{Character or 'NA'. If provided and non-empty, the plot is saved to this path.}

\item{ggsave_params}{A named list of arguments passed to \code{\link[ggplot2:ggsave]{ggplot2::ggsave()}}.}

\item{show_pvalue}{Logical. If 'TRUE' and there are at least two groups, append a global
Chi-squared p-value to the caption.}

\item{drop_non_acgt}{Logical. If 'FALSE', characters other than A/C/G/T are tallied into an
"Other" category.}
}
\value{
A 'ggplot' object. If 'output_path' is provided and non-empty, the plot is saved
to file and the function returns 'invisible(NULL)'.
}
\description{
Creates a bar plot to compare the overall proportion of each nucleotide
(A/C/G/T; optional "Other") in the end motifs. Error bars show 95\% confidence intervals.
}
\examples{
## --- Create a dataset for demonstration ---
set.seed(42)

# Helper to generate random DNA sequences with base bias
generate_biased_dna <- function(n_seq, len, prob) {
  bases <- c("A", "C", "G", "T")
  replicate(n_seq, paste(sample(bases, len, replace = TRUE, prob = prob), collapse = ""))
}

# 50 "MUT" fragments biased toward 'C'
df_mut <- data.frame(
  Fragment_Bases_5p = generate_biased_dna(50, 10, prob = c(0.2, 0.5, 0.15, 0.15)),
  Fragment_Bases_3p = generate_biased_dna(50, 10, prob = c(0.2, 0.5, 0.15, 0.15)),
  Fragment_Status_Simple = "MUT"
)

# 50 "WT" fragments biased toward 'G'
df_wt <- data.frame(
  Fragment_Bases_5p = generate_biased_dna(50, 10, prob = c(0.15, 0.15, 0.5, 0.2)),
  Fragment_Bases_3p = generate_biased_dna(50, 10, prob = c(0.15, 0.15, 0.5, 0.2)),
  Fragment_Status_Simple = "WT"
)

# Combine into a single data frame
example_df <- rbind(df_mut, df_wt)

## --- Function calls ---

# 1) Default plot: compare MUT vs WT for 3-mers from both ends
p1 <- plot_freq_barplot(example_df)
print(p1)

# 2) First-nucleotide only (k = 1) on 5' end, with custom colors
p2 <- plot_freq_barplot(
  df_fragments = example_df,
  motif_type   = "Start",
  motif_size   = 1,
  colors_z     = c("MUT" = "#d95f02", "WT" = "#1b9e77"),
  title        = "5' First Base Composition"
)
print(p2)

# 3) Ungrouped: overall nucleotide frequencies across all fragments
p3 <- plot_freq_barplot(example_df, col_z = NULL, title = "Overall Composition")
print(p3)

# 4) Subset of groups (if you had >2 groups, e.g., "MUT", "WT", "AMB")
p4 <- plot_freq_barplot(
  df_fragments = example_df,
  vals_z       = c("MUT", "WT")
)
print(p4)

# 5) Include non-ACGT characters tallied as "Other"
example_df$Fragment_Bases_5p[1:3] <- c("NNNNNNNNNN", "ACGTNACGTN", "TTTNAAAAAA")
p5 <- plot_freq_barplot(example_df, motif_size = 2, drop_non_acgt = FALSE,
                        title = "Including 'Other' (non-ACGT)")
print(p5)

# 6) Save to file with specific dimensions
# plot_freq_barplot(
#   df_fragments = example_df,
#   output_path  = file.path(tempdir(), "nucleotide_frequency.png"),
#   ggsave_params = list(width = 7, height = 5, units = "in", dpi = 300, bg = "white")
# )
}
