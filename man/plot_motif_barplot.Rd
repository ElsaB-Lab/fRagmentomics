% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_motif_barplot.R
\name{plot_motif_barplot}
\alias{plot_motif_barplot}
\title{Plot 3-base motif proportions with various representations}
\usage{
plot_motif_barplot(
  df_fragments,
  end_motif_5p = "Fragment_Bases_5p",
  end_motif_3p = "Fragment_Bases_3p",
  motif_type = "Both",
  motif_start = NULL,
  col_z = "Fragment_Status_Simple",
  vals_z = NULL,
  representation = "split_by_base",
  ...,
  colors_z = c("#FD96A9", "#E88B00", "#0D539E", "#6CAE75")
)
}
\arguments{
\item{df_fragments}{The input dataframe containing fragment sequence data.}

\item{end_motif_5p}{Character string. Column name for 5' end sequences.}

\item{end_motif_3p}{Character string. Column name for 3' end sequences.}

\item{motif_type}{Character string. Which ends to analyze: 'Start', 'End', or 'Both'.}

\item{motif_start}{Optional character vector ('A','C','G','T') to filter motifs by their starting base.}

\item{col_z}{Character string. Column name for grouping. If NULL, no grouping is applied.}

\item{vals_z}{A character vector of group names from 'col_z' to include. If NULL, all unique groups in 'col_z' are used.}

\item{representation}{Character string. The type of plot to generate.
\itemize{
\item '"split_by_base"' (default): A proportion plot with hierarchical axes, splitting motifs by each base position into facets.
\item '"differential"': A log2 fold change plot comparing two groups.
\item '"split_by_motif"': A proportion plot with motifs on the x-axis, with bars for different groups placed side-by-side.
}}

\item{...}{Additional arguments passed on to 'ggplot2::geom_bar()'.}

\item{colors_z}{For the "split_by_base" plot, a character vector of 4 colors for
A, C, G, T, or a single string naming an RColorBrewer palette. For other plots,
a suitable palette is chosen automatically.}
}
\value{
A ggplot object.
}
\description{
Creates a bar plot to visualize the proportion of 3-base motifs at fragment ends. Supports grouped analysis and
three different visual representations: hierarchical faceting by base, log2 fold change, or side-by-side motifs.
}
\examples{
## --- Create a dataset for demonstration ---
# Set a seed for reproducibility
set.seed(42)

# Helper function to generate random DNA sequences with a bias
generate_biased_dna <- function(n_seq, len, prob) {
    bases <- c("A", "C", "G", "T")
    replicate(n_seq, paste(sample(bases, len, replace = TRUE, prob = prob), collapse = ""))
}

# Create 50 "MUT" fragments with a high proportion of motifs starting with 'C'
df_mut <- data.frame(
    Fragment_Bases_5p = generate_biased_dna(50, 10, prob = c(0.2, 0.5, 0.15, 0.15)),
    Fragment_Bases_3p = generate_biased_dna(50, 10, prob = c(0.2, 0.5, 0.15, 0.15)),
    Fragment_Status_Simple = "MUT"
)

# Create 50 "WT" fragments with a high proportion of motifs starting with 'G'
df_wt <- data.frame(
    Fragment_Bases_5p = generate_biased_dna(50, 10, prob = c(0.15, 0.15, 0.5, 0.2)),
    Fragment_Bases_3p = generate_biased_dna(50, 10, prob = c(0.15, 0.15, 0.5, 0.2)),
    Fragment_Status_Simple = "WT"
)

# Combine into a single dataframe
example_df <- rbind(df_mut, df_wt)

## --- Function Calls for Each Representation ---

# 1. Hierarchical Plot (representation = "split_by_base")
# This is the default. It creates nested facets for each base position.
p1 <- plot_motif_barplot(
    df_fragments = example_df,
    representation = "split_by_base"
)
print(p1)

# You can also filter this plot to show only motifs starting with certain bases.
p1_filtered <- plot_motif_barplot(
    df_fragments = example_df,
    representation = "split_by_base",
    motif_start = c("C", "G")
)
print(p1_filtered)

# 2. Differential Plot (representation = "differential")
# This shows the log2 fold change in motif proportions between two groups.
# It requires exactly two groups specified in `vals_z`.
p2 <- plot_motif_barplot(
    df_fragments = example_df,
    representation = "differential",
    vals_z = c("MUT", "WT")
)
print(p2)

# 3. Side-by-side Motif Plot (representation = "split_by_motif")
# This creates a more traditional bar plot with motifs on the x-axis and
# bars for each group shown side-by-side.
p3 <- plot_motif_barplot(
    df_fragments = example_df,
    representation = "split_by_motif"
)
print(p3)
}
