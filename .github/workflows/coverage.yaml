name: Test & Coverage

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  covr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.3' 

      - name: Check R version
        run: |
          Rscript --version
        shell: bash

      - name: Install system dependencies for R packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev
        shell: bash

      - name: Install R package dependencies (including rcmdcheck)
        run: |
          # Install key tools for checking and dependency management
          install.packages(c("rcmdcheck", "remotes", "BiocManager"), repos = "https://cloud.r-project.org", Ncpus = 2)
          
          # Set up Bioconductor
          options(repos = BiocManager::repositories())
          BiocManager::install(ask = FALSE, update = FALSE) 
          
          # Install all package dependencies from DESCRIPTION (Imports, Depends, LinkingTo, Suggests)
          # This will also install covr (from Suggests) and testthat (from Suggests or as a dep of covr)
          remotes::install_deps(dependencies = TRUE, Ncpus = 2)

          # Verify rcmdcheck is available for the next step
          if (!requireNamespace("rcmdcheck", quietly = TRUE)) {
            stop("rcmdcheck package is required but was not installed.")
          }
        shell: Rscript {0}

      - name: Check package using rcmdcheck (runs tests)
        run: |
          options(crayon.enabled = TRUE) # For colored output if supported
          # Test failures will be reported in detail in the output of this command.
          check_results <- rcmdcheck::rcmdcheck(args = c("--no-manual", "--no-build-vignettes", "--as-cran"), error_on = "warning")
        shell: Rscript {0}

      - name: Calculate and upload coverage (only if check passed)
        # This step will only run if the 'Check package using rcmdcheck' step above succeeded
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          # Verify covr is available
          if (!requireNamespace("covr", quietly = TRUE)) {
            stop("covr package not found. It should have been installed from Suggests.")
          }
          # Tests are run again by covr here for coverage calculation
          cov <- covr::package_coverage(type = "tests")
          print(cov) 
          covr::codecov(coverage = cov, token = Sys.getenv("CODECOV_TOKEN"))
        shell: Rscript {0}