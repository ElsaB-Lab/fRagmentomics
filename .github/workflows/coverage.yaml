name: Test & Coverage

on:
  workflow_dispatch:  
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  covr:
    runs-on: ubuntu-latest
    env:
      R_BUILD_VIGNETTES: "false"

    steps:
      - uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.3.3'

      - name: Check R version
        run: Rscript --version
        shell: bash

      - name: Install system dependencies (including bcftools)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            bcftools
        shell: bash

      - name: Install R package dependencies (including rcmdcheck & covr)
        run: |
          install.packages(c("rcmdcheck", "remotes", "BiocManager", "covr"), repos = "https://cloud.r-project.org", Ncpus = 2)
          options(repos = BiocManager::repositories())
          BiocManager::install(ask = FALSE, update = FALSE)
          remotes::install_deps(dependencies = TRUE, Ncpus = 2)
          if (!requireNamespace("rcmdcheck", quietly = TRUE)) stop("rcmdcheck package is required but was not installed.")
        shell: Rscript {0}

      - name: Check package using rcmdcheck (runs tests)
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(
            args       = c("--no-manual", "--as-cran"),
            build_args = c("--no-build-vignettes"),
            error_on   = "warning"
          )
        shell: Rscript {0}

      - name: Calculate and upload coverage (only if check passed)
        if: ${{ !env.ACT }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          if (!requireNamespace("covr", quietly = TRUE)) stop("covr not found")
          cov <- covr::package_coverage(type = "tests")
          print(cov)
          covr::codecov(coverage = cov, token = Sys.getenv("CODECOV_TOKEN"))
        shell: Rscript {0}
